import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.0.5"
    }

}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.7.10'
}

// 引入版本控制
apply from: 'version.gradle'

allprojects {

    group = 'per.chowhound.bot.mirai'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    // 配置插件
    apply {
        plugin 'org.springframework.boot'
        plugin 'io.spring.dependency-management'
        plugin 'org.jetbrains.kotlin.jvm'
        plugin 'org.jetbrains.kotlin.plugin.spring'
    }

    // 配置仓库
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }

    // 配置 Kotlin 编译器
    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '17'
        }
    }

    // 配置测试
    test{
        useJUnitPlatform()
    }

}

subprojects {
    // 依赖版本管理
    dependencyManagement {
        dependencies{
            for (dep in rootProject.ext.dependencies) {
                dependency dep.value
            }
        }
    }

    dependencies {
        implementation "cn.hutool:hutool-all"
        implementation "org.springframework.boot:spring-boot-starter"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }
}




